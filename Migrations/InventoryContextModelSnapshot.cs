// <auto-generated />
using System;
using DOInventoryManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOInventoryManager.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("DOInventoryManager.Models.Allocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AllocatedQuantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("AllocatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AllocatedValueUSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ConsumptionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConsumptionId");

                    b.HasIndex("Month");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Allocations");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Consumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ConsumptionDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ConsumptionLiters")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LegsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<int>("VesselId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Month");

                    b.HasIndex("VesselId");

                    b.ToTable("Consumptions");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("InvoiceReceiptDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceReference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("QuantityLiters")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("QuantityTons")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("RemainingQuantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValueUSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VesselId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseDate");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VesselId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 7, 26, 3, 24, 53, 556, DateTimeKind.Local).AddTicks(1889),
                            Currency = "USD",
                            ExchangeRate = 1.0m,
                            Name = "GAC"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 7, 26, 3, 24, 53, 556, DateTimeKind.Local).AddTicks(1900),
                            Currency = "JOD",
                            ExchangeRate = 1.4104372m,
                            Name = "Al Manaseer"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 7, 26, 3, 24, 53, 556, DateTimeKind.Local).AddTicks(1902),
                            Currency = "USD",
                            ExchangeRate = 1.0m,
                            Name = "Abu Younis Sons"
                        });
                });

            modelBuilder.Entity("DOInventoryManager.Models.Vessel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vessels");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Allocation", b =>
                {
                    b.HasOne("DOInventoryManager.Models.Consumption", "Consumption")
                        .WithMany("Allocations")
                        .HasForeignKey("ConsumptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOInventoryManager.Models.Purchase", "Purchase")
                        .WithMany("Allocations")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumption");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Consumption", b =>
                {
                    b.HasOne("DOInventoryManager.Models.Vessel", "Vessel")
                        .WithMany("Consumptions")
                        .HasForeignKey("VesselId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vessel");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Purchase", b =>
                {
                    b.HasOne("DOInventoryManager.Models.Supplier", "Supplier")
                        .WithMany("Purchases")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOInventoryManager.Models.Vessel", "Vessel")
                        .WithMany("Purchases")
                        .HasForeignKey("VesselId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("Vessel");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Consumption", b =>
                {
                    b.Navigation("Allocations");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Purchase", b =>
                {
                    b.Navigation("Allocations");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Supplier", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("DOInventoryManager.Models.Vessel", b =>
                {
                    b.Navigation("Consumptions");

                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
