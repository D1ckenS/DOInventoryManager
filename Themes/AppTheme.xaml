<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Import all theme resources -->
    <ResourceDictionary.MergedDictionaries>
        <!-- Typography system -->
        <ResourceDictionary Source="Typography.xaml"/>
        
        <!-- Fluent component styles -->
        <ResourceDictionary Source="FluentStyles.xaml"/>
        
        <!-- Default to Light Theme (will be switched programmatically) -->
        <ResourceDictionary Source="LightTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- Application-wide default styles -->
    
    <!-- Default TextBlock Style - disabled to avoid circular references -->
    <!-- <Style TargetType="TextBlock" BasedOn="{StaticResource BodyMediumTextStyle}"/> -->
    
    <!-- Default styles - disabled to avoid resource loading conflicts -->
    <!-- <Style TargetType="Button" BasedOn="{StaticResource FluentButtonStyle}"/> -->
    <!-- <Style TargetType="TextBox" BasedOn="{StaticResource FluentTextBoxStyle}"/> -->
    <!-- <Style TargetType="ComboBox" BasedOn="{StaticResource FluentComboBoxStyle}"/> -->
    <!-- <Style TargetType="DatePicker" BasedOn="{StaticResource FluentDatePickerStyle}"/> -->
    
    <!-- Default Border Style for Cards -->
    <Style x:Key="DefaultCardStyle" TargetType="Border" BasedOn="{StaticResource FluentCardStyle}"/>
    
    <!-- Window Style -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
    </Style>
    
    <!-- UserControl Style -->
    <Style TargetType="UserControl">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
    </Style>
    
    <!-- TabControl Modern Style -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    
    <Style TargetType="TabItem">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="BorderElement"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,2"
                            BorderBrush="Transparent"
                            CornerRadius="4,4,0,0"
                            Margin="{TemplateBinding Margin}">
                        <ContentPresenter x:Name="ContentSite"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"
                                        ContentSource="Header"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderElement" Property="BorderBrush" 
                                    Value="{DynamicResource PrimaryBrandBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrandBrush}"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderElement" Property="Background" 
                                    Value="{DynamicResource SubtleBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGrid Modern Style -->
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderSubtleBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderSubtleBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="RowHeight" Value="36"/>
        <Setter Property="ColumnHeaderHeight" Value="40"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource AlternatingRowBackgroundBrush}"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
    </Style>
    
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource SubtleBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderSubtleBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrandBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextOnAccentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SubtleBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Fix for hardcoded colors in legacy views -->
    <Style x:Key="LegacyHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
    </Style>
    
    <Style x:Key="LegacySuccessTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource SuccessForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
    </Style>
    
    <Style x:Key="LegacyWarningTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WarningForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
    </Style>
    
    <Style x:Key="LegacyErrorTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ErrorForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
    </Style>

</ResourceDictionary>